---
source: hydroflow/examples/test/main.rs
assertion_line: 20
expression: hf.meta_graph().unwrap().to_mermaid()
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#02f,color:#fff,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff0,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa,stroke-width:4px,color:red,font-size:1.5em;
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1[\"(1v1) <code>source_stream(persist_input)</code>"/]:::pullClass
    2v1[\"(2v1) <code>persist()</code>"/]:::pullClass
    1v1--->2v1
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    3v1[\"(3v1) <code>fold::&lt;'tick&gt;(0, |a, b| (a + b))</code>"/]:::pullClass
    5v1[\"(5v1) <code>cross_join::&lt;'tick, 'tick&gt;()</code>"/]:::pullClass
    6v1[/"(6v1) <code>for_each(|x| result_send.send(x).unwrap())</code>"\]:::pushClass
    3v1--0--->5v1
    5v1--->6v1
    subgraph sg_2v1_var_product_node ["var <tt>product_node</tt>"]
        5v1
        6v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 0"]
    4v1[\"(4v1) <code>source_stream(other_input)</code>"/]:::pullClass
end
2v1--->7v1
4v1--->8v1
7v1["(7v1) <code>handoff</code>"]:::otherClass
7v1===o3v1
8v1["(8v1) <code>handoff</code>"]:::otherClass
8v1--1--->5v1

